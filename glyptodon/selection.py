# AUTOGENERATED! DO NOT EDIT! File to edit: ../01_selection.ipynb.

# %% auto 0
__all__ = ['createManuscriptSelect', 'createSelectionInfo', 'Selection']

# %% ../01_selection.ipynb 4
import ipywidgets as widgets
import param
import panel as pn
pn.extension('ipywidgets')

from .widgetCalls import *
from .manuscriptFiles import currentManuscripts

# %% ../01_selection.ipynb 6
def createManuscriptSelect():
    manuscripts = currentManuscripts()
    
    selectionKey = {}
    selectionNames = []
    for manuscript in manuscripts:
        selectionNames.append(manuscript[1]['Work'])
        selectionKey[selectionNames[-1]] = manuscript
        
    manuscriptSelect = widgets.Select(options = selectionNames,
                                      value = selectionNames[0],
                                      rows = 10,
                                      disabled = False,
                                      layout = widgets.Layout(height = 'auto',
                                                              width = 'auto'
                                                             )
                                     )
    
    return manuscripts, selectionKey, manuscriptSelect

# %% ../01_selection.ipynb 9
def createSelectionInfo():
    return widgets.HTML(value = "<h2>Info Pane</h2>\
                                <p>This menu allows you to upload new manuscripts and access previously uploaded manuscripts.\
                                The uploader will accept only .xml and image files.\
                                For testing purposes, it only accepts images right now.<p>",)

# %% ../01_selection.ipynb 12
class Selection(param.Parameterized):
    
    def panel(self):
        newMan = tealButton('New Manuscript')
        selMan = blueButton('Select Manuscript')

        buttons = pn.Row(newMan, selMan)

        manuscripts, selectionKey, manuscriptSelect = createManuscriptSelect()

        selections = pn.Column(manuscriptSelect, buttons)
        return pn.Row(createSelectionInfo(), selections)

# %% ../01_selection.ipynb 16
@patch_to(Selection)
def handleSelection(change):
    asdf = 'asdf'
