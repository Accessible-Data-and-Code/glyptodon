# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/glyptodon',
                'doc_host': 'https://Accessible-Data-and-Code.github.io',
                'git_url': 'https://github.com/Accessible-Data-and-Code/glyptodon',
                'lib_path': 'glyptodon'},
  'syms': { 'glyptodon.annotation': { 'glyptodon.annotation.createAnnotationFigure': ( 'annotation.html#createannotationfigure',
                                                                                       'glyptodon/annotation.py'),
                                      'glyptodon.annotation.createAnnotationInfo': ( 'annotation.html#createannotationinfo',
                                                                                     'glyptodon/annotation.py'),
                                      'glyptodon.annotation.createAnnotationLayout': ( 'annotation.html#createannotationlayout',
                                                                                       'glyptodon/annotation.py'),
                                      'glyptodon.annotation.createAnnotationTextArea': ( 'annotation.html#createannotationtextarea',
                                                                                         'glyptodon/annotation.py'),
                                      'glyptodon.annotation.createFigureLayout': ( 'annotation.html#createfigurelayout',
                                                                                   'glyptodon/annotation.py'),
                                      'glyptodon.annotation.createNextTab': ('annotation.html#createnexttab', 'glyptodon/annotation.py'),
                                      'glyptodon.annotation.createPageSelector': ( 'annotation.html#createpageselector',
                                                                                   'glyptodon/annotation.py'),
                                      'glyptodon.annotation.createSaveAnnotation': ( 'annotation.html#createsaveannotation',
                                                                                     'glyptodon/annotation.py'),
                                      'glyptodon.annotation.createSaveShapes': ( 'annotation.html#createsaveshapes',
                                                                                 'glyptodon/annotation.py'),
                                      'glyptodon.annotation.createTextareaLayout': ( 'annotation.html#createtextarealayout',
                                                                                     'glyptodon/annotation.py')},
            'glyptodon.app': { 'glyptodon.app.exportManuscriptCallback': ('app.html#exportmanuscriptcallback', 'glyptodon/app.py'),
                               'glyptodon.app.finalizeSelectionCallback': ('app.html#finalizeselectioncallback', 'glyptodon/app.py'),
                               'glyptodon.app.lineNumberCallback': ('app.html#linenumbercallback', 'glyptodon/app.py'),
                               'glyptodon.app.nextTabCallback': ('app.html#nexttabcallback', 'glyptodon/app.py'),
                               'glyptodon.app.pageSelectorCallback': ('app.html#pageselectorcallback', 'glyptodon/app.py'),
                               'glyptodon.app.saveAnnotationCallback': ('app.html#saveannotationcallback', 'glyptodon/app.py'),
                               'glyptodon.app.saveNContinuteCallback': ('app.html#savencontinutecallback', 'glyptodon/app.py'),
                               'glyptodon.app.saveShapesCallback': ('app.html#saveshapescallback', 'glyptodon/app.py'),
                               'glyptodon.app.selectManuscript': ('app.html#selectmanuscript', 'glyptodon/app.py')},
            'glyptodon.classes': { 'glyptodon.classes.BBox': ('classes.html#bbox', 'glyptodon/classes.py'),
                                   'glyptodon.classes.BBox.__eq__': ('classes.html#bbox.__eq__', 'glyptodon/classes.py'),
                                   'glyptodon.classes.BBox.__gt__': ('classes.html#bbox.__gt__', 'glyptodon/classes.py'),
                                   'glyptodon.classes.BBox.__init__': ('classes.html#bbox.__init__', 'glyptodon/classes.py'),
                                   'glyptodon.classes.BBox.__lt__': ('classes.html#bbox.__lt__', 'glyptodon/classes.py'),
                                   'glyptodon.classes.BBox.bboxesToCSV': ('classes.html#bbox.bboxestocsv', 'glyptodon/classes.py'),
                                   'glyptodon.classes.BBox.csvToBBoxes': ('classes.html#bbox.csvtobboxes', 'glyptodon/classes.py'),
                                   'glyptodon.classes.BBox.isLine': ('classes.html#bbox.isline', 'glyptodon/classes.py'),
                                   'glyptodon.classes.BBox.sortBBoxes': ('classes.html#bbox.sortbboxes', 'glyptodon/classes.py'),
                                   'glyptodon.classes.Line': ('classes.html#line', 'glyptodon/classes.py'),
                                   'glyptodon.classes.Line.__eq__': ('classes.html#line.__eq__', 'glyptodon/classes.py'),
                                   'glyptodon.classes.Line.__gt__': ('classes.html#line.__gt__', 'glyptodon/classes.py'),
                                   'glyptodon.classes.Line.__init__': ('classes.html#line.__init__', 'glyptodon/classes.py'),
                                   'glyptodon.classes.Line.__lt__': ('classes.html#line.__lt__', 'glyptodon/classes.py'),
                                   'glyptodon.classes.Line.csvToLines': ('classes.html#line.csvtolines', 'glyptodon/classes.py'),
                                   'glyptodon.classes.Line.linesToCSV': ('classes.html#line.linestocsv', 'glyptodon/classes.py'),
                                   'glyptodon.classes.Line.sortLines': ('classes.html#line.sortlines', 'glyptodon/classes.py')},
            'glyptodon.export': { 'glyptodon.export.createDirectoryOptions': ('export.html#createdirectoryoptions', 'glyptodon/export.py'),
                                  'glyptodon.export.createExportButton': ('export.html#createexportbutton', 'glyptodon/export.py'),
                                  'glyptodon.export.createExportDownload': ('export.html#createexportdownload', 'glyptodon/export.py'),
                                  'glyptodon.export.createExportInfo': ('export.html#createexportinfo', 'glyptodon/export.py'),
                                  'glyptodon.export.createExportLayout': ('export.html#createexportlayout', 'glyptodon/export.py'),
                                  'glyptodon.export.createExportName': ('export.html#createexportname', 'glyptodon/export.py')},
            'glyptodon.information': { 'glyptodon.information.createCenturiesSlider': ( 'information.html#createcenturiesslider',
                                                                                        'glyptodon/information.py'),
                                       'glyptodon.information.createInformationInfo': ( 'information.html#createinformationinfo',
                                                                                        'glyptodon/information.py'),
                                       'glyptodon.information.createInformationLayout': ( 'information.html#createinformationlayout',
                                                                                          'glyptodon/information.py'),
                                       'glyptodon.information.createInputObjects': ( 'information.html#createinputobjects',
                                                                                     'glyptodon/information.py'),
                                       'glyptodon.information.createSaveNContinue': ( 'information.html#createsavencontinue',
                                                                                      'glyptodon/information.py'),
                                       'glyptodon.information.createUploadObjects': ( 'information.html#createuploadobjects',
                                                                                      'glyptodon/information.py'),
                                       'glyptodon.information.labeledInput': ('information.html#labeledinput', 'glyptodon/information.py')},
            'glyptodon.manuscriptFiles': { 'glyptodon.manuscriptFiles.createManuscriptDirectory': ( 'manuscriptfiles.html#createmanuscriptdirectory',
                                                                                                    'glyptodon/manuscriptFiles.py'),
                                           'glyptodon.manuscriptFiles.currentManuscripts': ( 'manuscriptfiles.html#currentmanuscripts',
                                                                                             'glyptodon/manuscriptFiles.py'),
                                           'glyptodon.manuscriptFiles.dictToList': ( 'manuscriptfiles.html#dicttolist',
                                                                                     'glyptodon/manuscriptFiles.py'),
                                           'glyptodon.manuscriptFiles.directoryNameClean': ( 'manuscriptfiles.html#directorynameclean',
                                                                                             'glyptodon/manuscriptFiles.py'),
                                           'glyptodon.manuscriptFiles.manuscriptImages': ( 'manuscriptfiles.html#manuscriptimages',
                                                                                           'glyptodon/manuscriptFiles.py'),
                                           'glyptodon.manuscriptFiles.saveImages': ( 'manuscriptfiles.html#saveimages',
                                                                                     'glyptodon/manuscriptFiles.py'),
                                           'glyptodon.manuscriptFiles.saveTranscripts': ( 'manuscriptfiles.html#savetranscripts',
                                                                                          'glyptodon/manuscriptFiles.py'),
                                           'glyptodon.manuscriptFiles.updateMetadata': ( 'manuscriptfiles.html#updatemetadata',
                                                                                         'glyptodon/manuscriptFiles.py'),
                                           'glyptodon.manuscriptFiles.zipManuscript': ( 'manuscriptfiles.html#zipmanuscript',
                                                                                        'glyptodon/manuscriptFiles.py')},
            'glyptodon.selection': { 'glyptodon.selection.createFinalizeSelection': ( 'selection.html#createfinalizeselection',
                                                                                      'glyptodon/selection.py'),
                                     'glyptodon.selection.createManuscriptSelect': ( 'selection.html#createmanuscriptselect',
                                                                                     'glyptodon/selection.py'),
                                     'glyptodon.selection.createSelectionInfo': ( 'selection.html#createselectioninfo',
                                                                                  'glyptodon/selection.py'),
                                     'glyptodon.selection.createSelectionLayout': ( 'selection.html#createselectionlayout',
                                                                                    'glyptodon/selection.py')}}}
