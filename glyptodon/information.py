# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_information.ipynb.

# %% auto 0
__all__ = ['labeledInput', 'createInputObjects', 'createCenturiesSlider', 'createUploadObjects', 'createInformationInfo',
           'createSaveNContinue', 'createInformationLayout']

# %% ../nbs/03_information.ipynb 5
from dash import dcc, html

# %% ../nbs/03_information.ipynb 7
def labeledInput(label, identity = None):
    lab = html.Label(children=label)
    inp = dcc.Input(placeholder=label, id=identity)

    return html.Div([lab, inp])

# %% ../nbs/03_information.ipynb 10
def createInputObjects():
    inputObjects = []
    metadata = ["Work", "Author", "Language", "Country", "City", "Institution"]

    for data in metadata:
        inputObjects.append(labeledInput(label = data, identity = data.lower()))

    return metadata, inputObjects

# %% ../nbs/03_information.ipynb 13
def createCenturiesSlider():
    centuries = [
        None,
        "1st",
        "2nd",
        "3rd",
    ] + [f"{i}th" for i in range(4, 21)]

    centuriesSlider = dcc.RangeSlider(
        min=1,
        max=20,
        step=1,
        value=[1, 20],
        id="centuries-slider",
        marks=None,
    )

    return centuries, html.Div([html.Label(children="Centuries"),centuriesSlider])

# %% ../nbs/03_information.ipynb 16
def createUploadObjects():
    uploadImages = dcc.Upload(
        children=html.Button("Upload Images"),
        multiple=True,
        id="upload-images",
    )

    uploadManuscripts = dcc.Upload(
        children=html.Button("Upload Manuscripts"),
        multiple=True,
        id="upload-manuscripts",
    )

    return uploadImages, uploadManuscripts

# %% ../nbs/03_information.ipynb 19
def createInformationInfo():
    return dcc.Markdown(
        """
    # Information
    
    This menu allows you to modify the information about a manuscript and upload images and transcripts for a manuscript.
    
    Once you have made your changes and uploaded the relevant files, click the Save and Continue button to save these changes and move to the next tab.
    """
    )

# %% ../nbs/03_information.ipynb 22
def createSaveNContinue():
    return html.Button("Save and Continue", id="save-and-continue")

# %% ../nbs/03_information.ipynb 24
def createInformationLayout():
    metadata, inputObjects = createInputObjects()
    centuries, centuriesSlider = createCenturiesSlider()
    uploaders = createUploadObjects()
    
    layout = html.Div(
        [
            createInformationInfo(),
            html.Br(), # This is a temporary measure to make it more readable, true for following Br calls
            html.Div(inputObjects),
            html.Br(),
            html.Div(
                [
                    uploaders[0], # uploadImages
                    uploaders[1], # uploadManuscripts
                ]
            ),
            html.Br(),
            createSaveNContinue(),
        ]
    )
    
    return metadata, centuries, inputObjects, centuriesSlider, uploaders, layout
